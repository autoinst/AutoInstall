name: Release Build

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        goos: [ windows, linux ]
        goarch: [ amd64, 386 ]
        goamd64: [ v1 ]
        exclude:
          - goarch: 386
            goos: dragonfly

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      CGO_ENABLED: 0
      BUILD_NAME: AutoInstall-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goamd64 }}${{ matrix.goos == 'windows' && '.exe' || '' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.20

      - name: Build
        run: bash ./build.sh

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_NAME }}
          path: dist/${{ env.BUILD_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ windows, linux ]
        goarch: [ amd64, 386 ]
        goamd64: [ v1 ]
        exclude:
          - goarch: 386
            goos: dragonfly
    env:
      BUILD_NAME: AutoInstall-${{ matrix.goos }}-${{ matrix.goarch }}-${{ matrix.goamd64 }}${{ matrix.goos == 'windows' && '.exe' || '' }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create or Update GitHub Release (beta)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: beta
          name: Beta Release
          body: |
            Auto-generated beta release from master @ ${{ github.sha }}
          prerelease: true
          overwrite: true  # 这确保文件会被覆盖更新
          files: dist/${{ env.BUILD_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
